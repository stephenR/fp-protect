GLIBC_PROVIDES dnl See aclocal.m4 in the top level source directory.
# Local configure fragment for sysdeps/powerpc/powerpc32.

# See whether gas has R_PPC_REL16 relocs.
AC_CACHE_CHECK(for R_PPC_REL16 gas support, libc_cv_ppc_rel16, [dnl
cat > conftest.s <<\EOF
	.text
	addis 11,30,_GLOBAL_OFFSET_TABLE_-.@ha
EOF
if AC_TRY_COMMAND(${CC-cc} -c $CFLAGS conftest.s 1>&AS_MESSAGE_LOG_FD); then
  libc_cv_ppc_rel16=yes
else
  libc_cv_ppc_rel16=no
fi
rm -f conftest*])
if test $libc_cv_ppc_rel16 = no; then
  AC_MSG_ERROR(R_PPC_REL16 is not supported. Binutils is too old.)
fi

# See whether GCC uses -msecure-plt.
AC_CACHE_CHECK(for -msecure-plt by default, libc_cv_ppc_secure_plt, [dnl
echo 'int foo (void) { extern int bar; return bar; }' > conftest.c
libc_cv_ppc_secure_plt=no
if AC_TRY_COMMAND(${CC-cc} -S $CFLAGS conftest.c -fpic -o conftest.s 1>&AS_MESSAGE_LOG_FD); then
  if grep '_GLOBAL_OFFSET_TABLE_-.*@ha' conftest.s > /dev/null 2>&1; then
    libc_cv_ppc_secure_plt=yes
  fi
fi
rm -rf conftest*])
if test $libc_cv_ppc_secure_plt = yes; then
  AC_DEFINE(HAVE_PPC_SECURE_PLT)
fi

# Check for support of thread-local storage handling in assembler and
# linker.
AC_CACHE_CHECK(for powerpc32 TLS support, libc_cv_powerpc32_tls, [dnl
cat > conftest.s <<\EOF
	.section ".tdata","awT",@progbits
x:	.long	1
x1:	.long	1
x2:	.long	1
	.text
	addi	3,31,x@got@tlsgd
	addi	3,31,x1@got@tlsld
	addi	9,3,x1@dtprel
	addis	9,3,x2@dtprel@ha
	addi	9,9,x2@dtprel@l
	lwz	0,x1@dtprel(3)
	addis	9,3,x2@dtprel@ha
	lwz	0,x2@dtprel@l(9)
	lwz	9,x3@got@tprel(31)
	add	9,9,x@tls
	addi	9,2,x1@tprel
	addis	9,2,x2@tprel@ha
	addi	9,9,x2@tprel@l
EOF
dnl
if AC_TRY_COMMAND(${CC-cc} -c $CFLAGS conftest.s 1>&AS_MESSAGE_LOG_FD); then
  libc_cv_powerpc32_tls=yes
else
  libc_cv_powerpc32_tls=no
fi
rm -f conftest*])
if test $libc_cv_powerpc32_tls = no; then
  AC_MSG_ERROR([the assembler must support TLS])
fi
